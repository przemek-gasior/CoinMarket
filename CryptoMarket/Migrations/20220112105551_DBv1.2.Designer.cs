// <auto-generated />
using System;
using CryptoMarket.Configs;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CryptoMarket.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20220112105551_DBv1.2")]
    partial class DBv12
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CryptoMarket.Models.CryptoWallet", b =>
                {
                    b.Property<int>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.HasKey("WalletId");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("CryptoMarket.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<float>("MarketCapUSD")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PercentChange1h")
                        .HasColumnType("real");

                    b.Property<float>("PercentChange24h")
                        .HasColumnType("real");

                    b.Property<float>("PercentChange7d")
                        .HasColumnType("real");

                    b.Property<float>("PriceInUsd")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("CryptoMarket.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UsdBalance")
                        .HasColumnType("real");

                    b.Property<int>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WalletId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CryptoMarket.Models.UserCurrency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("CurrencyId");

                    b.ToTable("UserCurrencies");
                });

            modelBuilder.Entity("CryptoWalletUserCurrency", b =>
                {
                    b.Property<int>("CryptoWalletsWalletId")
                        .HasColumnType("int");

                    b.Property<int>("CurrenciesCurrencyId")
                        .HasColumnType("int");

                    b.HasKey("CryptoWalletsWalletId", "CurrenciesCurrencyId");

                    b.HasIndex("CurrenciesCurrencyId");

                    b.ToTable("CryptoWalletUserCurrency");
                });

            modelBuilder.Entity("CryptoMarket.Models.User", b =>
                {
                    b.HasOne("CryptoMarket.Models.CryptoWallet", "Wallet")
                        .WithOne()
                        .HasForeignKey("CryptoMarket.Models.User", "WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("CryptoWalletUserCurrency", b =>
                {
                    b.HasOne("CryptoMarket.Models.CryptoWallet", null)
                        .WithMany()
                        .HasForeignKey("CryptoWalletsWalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CryptoMarket.Models.UserCurrency", null)
                        .WithMany()
                        .HasForeignKey("CurrenciesCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
